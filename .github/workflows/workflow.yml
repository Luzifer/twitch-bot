name: CI Workflow

on: push

permissions:
  contents: read

jobs:
  test:
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Lint and test code
        run: make lint test frontend_lint
      - name: Build release (quick local for compile)
        run: make build_prod
      - name: Execute Trivy scan
        run: make trivy

  doc-generator:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [test]
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
          submodules: true
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Generate documentation
        run: make render_docs DOCS_BASE_URL=https://luzifer.github.io/twitch-bot/
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: .rendered-docs
      - name: Deploy artifact
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  docker-publish:
    if: ${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' }}
    needs: [test]
    defaults:
      run:
        shell: bash
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Log into registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Build & Publish
        run: bash ci/docker-publish.sh

  integration-mariadb:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:11.8.3@sha256:ec5d50f32359ff020b93cce6834f9bf89147c34aea0e90c952ccf556c94a4fb8
        env:
          MYSQL_PASSWORD: twitch-bot-pass
          MYSQL_ROOT_PASSWORD: root-pass
          MYSQL_USER: twitch-bot
        options: >-
          --health-cmd "healthcheck.sh
          --connect
          --innodb_initialized"
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
    steps:
      - name: Install required packages
        run: apt-get install -y --no-install-recommends mariadb-client
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Set up MariaDB service
        run: |
          mariadb -h mariadb -u root --password=root-pass <<EOF
            CREATE DATABASE integration DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;
            GRANT ALL ON integration.* TO 'twitch-bot'@'%';
          EOF
      - name: Run tests against MariaDB
        env:
          GO_TEST_DB_ENGINE: mysql
          GO_TEST_DB_DSN: twitch-bot:twitch-bot-pass@tcp(mariadb:3306)/integration?charset=utf8mb4&parseTime=True
        run: make short_test

  integration-mysql:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:9.4.0@sha256:439bfb4044dc59ade76c4e5c4065c02e5ba4d4007db32c40ac58d55c03069916
        env:
          MYSQL_PASSWORD: twitch-bot-pass
          MYSQL_ROOT_PASSWORD: root-pass
          MYSQL_USER: twitch-bot
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
    steps:
      - name: Install required packages
        run: apt-get install -y --no-install-recommends mariadb-client
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Set up MySQL service
        run: |
          mariadb --skip-ssl -h mysql -u root --password=root-pass <<EOF
            CREATE DATABASE integration DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;
            GRANT ALL ON integration.* TO 'twitch-bot'@'%';
          EOF
      - name: Run tests against MySQL
        env:
          GO_TEST_DB_ENGINE: mysql
          GO_TEST_DB_DSN: twitch-bot:twitch-bot-pass@tcp(mysql:3306)/integration?charset=utf8mb4&parseTime=True
        run: make short_test

  integration-postgres:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.6@sha256:29e0bb09c8e7e7fc265ea9f4367de9622e55bae6b0b97e7cce740c2d63c2ebc0
        env:
          POSTGRES_PASSWORD: twitch-bot-pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Run tests against PostgreSQL
        env:
          GO_TEST_DB_ENGINE: postgres
          GO_TEST_DB_DSN: >
            host=postgres
            user=postgres
            password=twitch-bot-pass
            dbname=postgres
            port=5432
            sslmode=disable
            timezone=UTC
        run: make short_test

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [test]
    defaults:
      run:
        shell: bash
    container:
      image: ghcr.io/luzifer-docker/action-env:master@sha256:4c11f204463c8912c2c3700188b17860f6a5fb7762b1d8308cb739c99ed601e3
      env:
        CGO_ENABLED: 0
        GOPATH: /go
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          show-progress: false
      - name: Marking workdir safe
        run: git config --global --add safe.directory /__w/twitch-bot/twitch-bot
      - name: Build release
        run: make publish
      - name: Extract changelog
        run: awk "/^#/ && ++c==2{exit}; /^#/f" "History.md" | tail -n +2 >release_changelog.md
      - name: Release
        uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1
        with:
          artifacts: .build/*
          bodyFile: release_changelog.md
          draft: false
          generateReleaseNotes: false
